[project]
name = "autogen-backend"
version = "0.1.0"
description = "autogen-backend"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.15.1",
    "asyncpg>=0.30.0",
    "autogen-agentchat>=0.4.8.2",
    "autogen-ext[azure,openai]>=0.4.8.2",
    "fastapi>=0.115.11",
    "httpx>=0.28.1",
    "psycopg>=3.2.6",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.8.1",
    "sqlmodel>=0.0.24",
    "uvicorn[standard]>=0.34.0",
]
[dependency-groups]
dev = [
    "pre-commit>=4.1.0",
]
[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "A",    # flake8-builtins (avoid shadowing built-ins)
    "C4",   # flake8-comprehensions (optimize list comprehensions)
    "T20",  # flake8-print (avoid print statements)
    "D",    # flake8-docstrings (enforce docstring standards)
    "N",    # pep8-naming (enforce consistent naming)
    "TCH",  # flake8-type-checking (ensure type annotations)
    "ANN",  # flake8-annotations (ensure consistent type annotations)
    "PL",   # Pylint (catch design/code smells)
    "TRY",  # tryceratops (improve exception handling)
    "ARG",  # flake8-unused-arguments (catch unused arguments)
]

ignore = [
    "D100",  # Ignore missing docstring in public module
    "D203",  # Ignore blank line before class conflicts
    "D213",  # Ignore multi-line summary position conflicts
    "D401",  # Ignore first line of docstring should be in imperative mood
]
